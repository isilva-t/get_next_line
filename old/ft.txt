static char	*get_line(int fd, char *buffer, char *backup)
{
	int		read_line;
	char	*ptr_temp;

	read_line = 1;
	while (read_line != '\0')
	{
		read_line = read(fd, buffer, BUFFER_SIZE);
		if (read_line == -1)
			return (NULL);
		else if (read_line == 0)
			break ;
	buffer[read_line] = '\0';
	if (!backup)
		backup = ft_strdup("");
	ptr_temp = backup;
	backup = ft_strjoin(ptr_temp, buffer);
	//free (ptr_temp);
	//ptr_temp = NULL;
	if (ft_strchr(buffer, '\n'))
		break ;
	}
	return (backup);
}

/*
static char	*rest_data(char *line)
{
	size_t	i;
	char	*backup;

	i = 0;
	while(line[i] != '\n" && line[i])
		i++;
	if (!line[i] || 

}*/

char	*get_next_line(int fd)
{
	static char	*backup;
	char	*line;
	char	*buffer;
	
	if (fd < 0 || BUFFER_SIZE <= 0)
		return (NULL);
	buffer = malloc(sizeof(char) * (BUFFER_SIZE + 1));
	if (!buffer)
		return (NULL);
	line = get_line(fd, buffer, backup);
	free (buffer);
	buffer = NULL;
	if (!line)
		return (NULL);
	//backup = (extract(line));
	return (line);
}
